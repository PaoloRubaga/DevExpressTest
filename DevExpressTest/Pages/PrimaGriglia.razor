@page "/primaGriglia"

@using DataAccessLibrary.Models
@using DataAccessLibrary

@inject IDispositivoData _db

<h3>PrimaGriglia</h3>


<DxGrid Data=@listaDispositivi
        EditModelSaving="ModificaDispositivoDX"
    EditMode="GridEditMode.PopupEditForm">
    <Columns>
        <DxGridCommandColumn />
        <DxGridSelectionColumn />
        <DxGridDataColumn FieldName="Matricola"  />
        <DxGridDataColumn FieldName="Descrizione"  />
        <DxGridDataColumn FieldName="Modello"  />
        
    </Columns>
    <EditFormTemplate Context="editFormContent ">
        @{
            dispositivoDaModificare = (DispositivoModel)editFormContent.DataItem;
            dispositivoModificato = (DispositivoModel)editFormContent.EditModel;

        }
        <DxFormLayout>
            <DxFormLayoutItem Caption="Matricola:">
                <DxTextBox @bind-Text="@dispositivoModificato.Matricola" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Descrizione:">
                <DxTextBox @bind-Text="@dispositivoModificato.Descrizione" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Modello:">
                <DxTextBox @bind-Text="@dispositivoModificato.Modello" />
            </DxFormLayoutItem>
        </DxFormLayout>
    </EditFormTemplate>
</DxGrid>




@code {
    IGrid? UsersGrid { get; set; }
    private List<DispositivoModel> listaDispositivi;
    private DispositivoModel newDispositivo = new DispositivoModel();
    private DispositivoModel dispositivoDaModificare;
    private DispositivoModel dispositivoModificato;
    string matricolaPk;
    

    protected override async Task OnInitializedAsync()
    {
        listaDispositivi = await _db.GetDispositivo();
    }

    async Task ModificaDispositivoDX(GridEditModelSavingEventArgs e)
    {

        var DispositivoModified = (DispositivoModel)e.EditModel;

        //var dataItem = e.IsNew ? new DispositivoModel() : listaDispositivi.Find(editModel.Matricola);

        await _db.UpdateDispositivo(dispositivoDaModificare.Matricola, dispositivoModificato);
        await OnInitializedAsync();
    }

    private async Task InsertDispositivo()
    {
        await _db.InsertDispositivo(newDispositivo);
        newDispositivo = new DispositivoModel();
        await OnInitializedAsync();
    }

    private async Task DeleteDispositivo(DispositivoModel d)
    {
        await _db.DeleteDispositivo(d);
        await OnInitializedAsync();
    }

    private async Task UpdateDispositivo()
    {
        await _db.UpdateDispositivo(matricolaPk, dispositivoDaModificare);

        dispositivoDaModificare = null;
        await OnInitializedAsync();
    }

    private async Task ModificaDispositivo(DispositivoModel d)
    {
        dispositivoDaModificare = new DispositivoModel
            {
                Matricola = d.Matricola,
                Descrizione = d.Descrizione,
                Modello = d.Modello
            };
        matricolaPk = d.Matricola;
        await OnInitializedAsync();
    }

}
