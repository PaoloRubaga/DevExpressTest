@page "/grid"

@using DevExpressTest.Data
@using Microsoft.AspNetCore.Components
@using Microsoft.JSInterop
@using System.Threading.Tasks
@using DevExpressTest.Components



@inject WeatherForecastService ForecastService


<DxGrid Data="@forecasts"
        ShowFilterRow="true"
        CssClass="mw-1100">
    <Columns>
        <DxGridDataColumn Caption="Date" FieldName="Date" />
        <DxGridDataColumn Caption="Temperature" FieldName="TemperatureF" />
        <DxGridDataColumn FieldName="SummaryString">
            <FilterRowCellTemplate>
                @{
                    var items = TagBoxFilterRowUtils.GetValueByFunctionOperator(context.FilterCriteria, nameof(WeatherForecast.Summary));
                }
                <DxTagBox TData="string"
                          TValue="string"
                          Data="Summaries"
                          Values="items"
                          ValuesChanged="(newValues) => { context.FilterCriteria = TagBoxFilterRowUtils.CreateFilterCriteriaByValues(newValues, nameof(WeatherForecast.Summary)); }" />
            </FilterRowCellTemplate>
        </DxGridDataColumn>
    </Columns>
</DxGrid>




@code {
    private WeatherForecast[] forecasts;
    private int valore = 10;

    List<string> Summaries = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        Summaries = WeatherForecastService.Summaries.ToList();
    }

    private DotNetObjectReference<Grid> _objectReference;
    public int WindowWidth { get; set; }

    protected override void OnInitialized()
    {
        _objectReference = DotNetObjectReference.Create(this);
    }


    void GeneraReport()
    {
        var report = new XtraReport();
        var detailBand = new DetailBand();
        report.Bands.Add(detailBand);

        var gridControl = new GridControl();
        gridControl.DataSource = dataSource;
        gridControl.AutoGenerateColumns = true;

        var gridControlContainer = new GridControlContainer(gridControl);
        gridControlContainer.PrintOnPage = true;

        detailBand.Controls.Add(gridControlContainer);

        var reportDesigner = new ReportDesigner();
        reportDesigner.Report = report;
        reportDesigner.OpenReportEditor();

        StateHasChanged();
    }
}
